#!/usr/bin/env python3
"""
{{TOOL_TITLE}} - Simple CLI tool

This is a minimal CLI tool template.
"""

import os
import sys
import argparse
import json

# Set output mode to human (for traditional error messages)
os.environ['ACOR_OUTPUT_MODE'] = 'human'


def main():
    """Main entry point for {{TOOL_NAME}}"""
    
    # Set up argument parser
    parser = argparse.ArgumentParser(
        description='{{TOOL_TITLE}} - CLI tool',
        formatter_class=argparse.RawDescriptionHelpFormatter
    )
    
    # Add arguments here
    parser.add_argument(
        'input',
        nargs='?',
        help='Input file or data'
    )
    
    parser.add_argument(
        '-v', '--verbose',
        action='store_true',
        help='Enable verbose output'
    )
    
    parser.add_argument(
        '-o', '--output',
        help='Output file (default: stdout)'
    )
    
    parser.add_argument(
        '--json',
        action='store_true',
        help='Output in JSON format'
    )
    
    # Parse arguments
    args = parser.parse_args()
    
    # === IMPLEMENT YOUR TOOL LOGIC HERE ===
    # This is where you add the main functionality of your tool.
    # This template is for human-oriented CLI tools (not AI protocol).
    # Replace the example below with your actual implementation.
    
    if args.verbose:
        print(f"Processing: {args.input or 'stdin'}", file=sys.stderr)
    
    # Replace this example with your actual processing logic
    result = {
        "status": "success",
        "input": args.input,
        "message": "Tool executed successfully"
    }
    
    # Output results
    if args.json:
        output = json.dumps(result, indent=2)
    else:
        output = f"Status: {result['status']}\nInput: {result['input']}\nMessage: {result['message']}"
    
    if args.output:
        with open(args.output, 'w') as f:
            f.write(output)
        if args.verbose:
            print(f"Output written to {args.output}", file=sys.stderr)
    else:
        print(output)
    
    return 0


if __name__ == "__main__":
    sys.exit(main())